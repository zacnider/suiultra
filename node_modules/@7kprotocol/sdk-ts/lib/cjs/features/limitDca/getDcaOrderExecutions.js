"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDcaOrderExecutions = getDcaOrderExecutions;
const url_1 = require("../../libs/url");
const constants_1 = require("./constants");
function getDcaOrderExecutions(_a) {
    return __awaiter(this, arguments, void 0, function* ({ owner, orderId, offset = 0, limit = 10, }) {
        const queryParams = {
            owner,
            orderId,
            statuses: ["SUCCESS"],
            offset,
            limit,
            orderType: "DCA",
        };
        const paramsStr = (0, url_1.formatQueryParams)(queryParams);
        const response = yield fetch(`${constants_1.LO_DCA_API}/order-executions?${paramsStr}`);
        if (!response.ok) {
            throw new Error("Failed to fetch dca order executions");
        }
        const orders = (yield response.json());
        return orders;
    });
}
