"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getDcaOrderExecutions = exports.getClosedDcaOrders = exports.cancelDcaOrder = exports.getOpenDcaOrders = exports.placeDcaOrder = exports.getClosedLimitOrders = exports.claimExpiredLimitOrder = exports.cancelLimitOrder = exports.getOpenLimitOrders = exports.placeLimitOrder = exports.getSwapHistory = exports.buildTx = exports.estimateGasFee = exports.getQuote = exports.getSuiPrice = exports.getTokenPrices = exports.getTokenPrice = exports.setSuiClient = exports.getSuiClient = void 0;
__exportStar(require("./types/aggregator"), exports);
const suiClient_1 = require("./suiClient");
Object.defineProperty(exports, "getSuiClient", { enumerable: true, get: function () { return suiClient_1.getSuiClient; } });
Object.defineProperty(exports, "setSuiClient", { enumerable: true, get: function () { return suiClient_1.setSuiClient; } });
const prices_1 = require("./features/prices");
Object.defineProperty(exports, "getTokenPrice", { enumerable: true, get: function () { return prices_1.getTokenPrice; } });
Object.defineProperty(exports, "getTokenPrices", { enumerable: true, get: function () { return prices_1.getTokenPrices; } });
Object.defineProperty(exports, "getSuiPrice", { enumerable: true, get: function () { return prices_1.getSuiPrice; } });
const swap_1 = require("./features/swap");
Object.defineProperty(exports, "buildTx", { enumerable: true, get: function () { return swap_1.buildTx; } });
Object.defineProperty(exports, "getQuote", { enumerable: true, get: function () { return swap_1.getQuote; } });
Object.defineProperty(exports, "estimateGasFee", { enumerable: true, get: function () { return swap_1.estimateGasFee; } });
Object.defineProperty(exports, "getSwapHistory", { enumerable: true, get: function () { return swap_1.getSwapHistory; } });
const limitDca_1 = require("./features/limitDca");
Object.defineProperty(exports, "placeLimitOrder", { enumerable: true, get: function () { return limitDca_1.placeLimitOrder; } });
Object.defineProperty(exports, "getOpenLimitOrders", { enumerable: true, get: function () { return limitDca_1.getOpenLimitOrders; } });
Object.defineProperty(exports, "cancelLimitOrder", { enumerable: true, get: function () { return limitDca_1.cancelLimitOrder; } });
Object.defineProperty(exports, "claimExpiredLimitOrder", { enumerable: true, get: function () { return limitDca_1.claimExpiredLimitOrder; } });
Object.defineProperty(exports, "getClosedLimitOrders", { enumerable: true, get: function () { return limitDca_1.getClosedLimitOrders; } });
Object.defineProperty(exports, "placeDcaOrder", { enumerable: true, get: function () { return limitDca_1.placeDcaOrder; } });
Object.defineProperty(exports, "getOpenDcaOrders", { enumerable: true, get: function () { return limitDca_1.getOpenDcaOrders; } });
Object.defineProperty(exports, "cancelDcaOrder", { enumerable: true, get: function () { return limitDca_1.cancelDcaOrder; } });
Object.defineProperty(exports, "getClosedDcaOrders", { enumerable: true, get: function () { return limitDca_1.getClosedDcaOrders; } });
Object.defineProperty(exports, "getDcaOrderExecutions", { enumerable: true, get: function () { return limitDca_1.getDcaOrderExecutions; } });
exports.default = {
    // sui client
    getSuiClient: suiClient_1.getSuiClient,
    setSuiClient: suiClient_1.setSuiClient,
    // prices
    getTokenPrice: prices_1.getTokenPrice,
    getTokenPrices: prices_1.getTokenPrices,
    getSuiPrice: prices_1.getSuiPrice,
    // swap
    getQuote: swap_1.getQuote,
    estimateGasFee: swap_1.estimateGasFee,
    buildTx: swap_1.buildTx,
    getSwapHistory: swap_1.getSwapHistory,
    // limit order
    placeLimitOrder: limitDca_1.placeLimitOrder,
    getOpenLimitOrders: limitDca_1.getOpenLimitOrders,
    cancelLimitOrder: limitDca_1.cancelLimitOrder,
    claimExpiredLimitOrder: limitDca_1.claimExpiredLimitOrder,
    getClosedLimitOrders: limitDca_1.getClosedLimitOrders,
    // dca
    placeDcaOrder: limitDca_1.placeDcaOrder,
    getOpenDcaOrders: limitDca_1.getOpenDcaOrders,
    cancelDcaOrder: limitDca_1.cancelDcaOrder,
    getClosedDcaOrders: limitDca_1.getClosedDcaOrders,
    getDcaOrderExecutions: limitDca_1.getDcaOrderExecutions,
};
